{"version":3,"sources":["componemts/SearchBox.js","componemts/Card.js","componemts/CardList.js","componemts/scroll.js","componemts/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","this","setState","React","Component","App","onSearchChange","event","searchfiled","target","value","fetch","then","response","json","users","filteredrobot","filter","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAWeA,EAVG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKC,UAAU,MAAf,SACI,uBAAOA,UAAU,uBACbC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCGXK,EATF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKP,UAAU,iEAAf,UACI,qBAAKQ,IAAI,QAAQC,IAAG,+BAA0BF,KAC9C,mCAAMF,EAAN,OACA,kCAAKC,EAAL,WCUGI,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,gCAAMA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OACI,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,MAHjB,QCIOC,EANA,SAACC,GACZ,OACI,sBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,SAA3C,sBAAgEH,EAAMI,SAAtE,aCkBOC,E,kDAnBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,gEAOfC,KAAKC,SAAS,CAAEF,UAAU,M,+BAG1B,OAAIC,KAAKF,MAAMC,SACJ,sFAGAC,KAAKR,MAAMI,a,GAfHM,IAAMC,WC2ClBC,G,wDAtCX,aAAe,IAAD,8BACV,gBAQJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAR1C,EAAKX,MAAQ,CACTX,OAAQ,GACRoB,YAAa,IAJP,E,gEAYO,IAAD,OAChBG,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAEd,OAAQ2B,S,+BAEtH,IAAD,OACCC,EAAgBf,KAAKF,MAAMX,OAAO6B,QAAO,SAAA7B,GAC3C,OAAOA,EAAON,KAAKoC,oBAAoBC,SAAS,EAAKpB,MAAMS,YAAYU,wBAE3E,OAAiC,IAA7BjB,KAAKF,MAAMX,OAAOgC,OAAwB,8CAGtC,gCACI,oBAAI3C,UAAU,KAAd,gCACA,qBAAKA,UAAU,KAAf,SACI,cAAC,EAAD,CAAWD,aAAcyB,KAAKK,mBAElC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ4B,e,GA9B5Bb,IAAMC,YCMTiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a10a95f2.chunk.js","sourcesContent":["import React from 'react';\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa3'>\n            <input className='b--light-yellow  pa3'\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange} />\n        </div>\n    );\n}\nexport default SearchBox","import React from \"react\";\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className=' fl w-9 b--white bg-light-yellow pa3 ma2 grow bw2 shadow-10 tc'>\n            <img alt='robot' src={`https://robohash.org/${id}`} />\n            <h2> {name} </h2>\n            <p> {email} </p>\n        </div>\n    )\n}\nexport default Card","import React from \"react\";\nimport Card from './Card';\nconst CardList = ({ robots }) => {\n    return (\n        <div>{robots.map((user, i) => {\n            return (\n                <Card\n                    key={i}\n                    id={robots[i].id}\n                    name={robots[i].name}\n                    email={robots[i].email}\n                />\n            )\n        })} </div>\n    )\n}\nexport default CardList","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', height: '500px' }}>         {props.children}      </div>\n\n    )\n}\nexport default Scroll","import React from 'react'\n\nclass ErrorBoundry extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch() {\n        this.setState({ hasError: true })\n    }\n    render() {\n        if (this.state.hasError) {\n            return <h1> OOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPSsssssssssssssss</h1>\n        }\n        else {\n            return this.props.children\n        }\n\n    }\n}\nexport default ErrorBoundry;\n\n\n","import React from 'react'\nimport SearchBox from \"../componemts/SearchBox\";\nimport CardList from \"../componemts/CardList\";\nimport Scroll from \"../componemts/scroll\";\nimport ErrorBoundry from \"../componemts/ErrorBoundry\";\nimport '../App.css'\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfiled: ''\n        }\n    }\n\n\n    onSearchChange = (event) => {\n        this.setState({ searchfiled: event.target.value })\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({ robots: users }))\n    }\n    render() {\n        const filteredrobot = this.state.robots.filter(robots => {\n            return robots.name.toLocaleLowerCase().includes(this.state.searchfiled.toLocaleLowerCase())\n        })\n        if (this.state.robots.length === 0) { return (<h1> Loading ...</h1>) }\n        else {\n            return (\n                <div>\n                    <h1 className='tc'> Robort  Friends  </h1>\n                    <div className='tc'>\n                        <SearchBox searchChange={this.onSearchChange} />\n                    </div>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredrobot} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div >\n\n            );\n        }\n    }\n}\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}